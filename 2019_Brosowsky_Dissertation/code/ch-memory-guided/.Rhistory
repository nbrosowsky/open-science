tag_outliers <- function(df){
xsize <- c(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 100)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
#maxRT<- xm+sd(x)*stds[length(xsize[xsize <= length(x)])]
#minRT<- xm-sd(x)*stds[length(xsize[xsize <= length(x)])]
temp.data<- df
temp.data$PrimeProbe <- factor(temp.data$PrimeProbe)
temp.data$PrimeCon <- factor(temp.data$PrimeCon)
temp.data$ProbeCon <- factor(temp.data$ProbeCon)
minMax <- temp.data %>%
filter(
RT < 5000,
RT > 0,
ACC == TRUE
) %>%
group_by(Exp,Subject,PrimeProbe,block,PrimeCon,ProbeCon) %>%
summarize (
Ntrials = n(),
cutoff = stds[length(xsize[xsize <= length(RT)])],
min = mean(RT) - sd(RT)*stds[length(xsize[xsize <= length(RT)])],
max = mean(RT) + sd(RT)*stds[length(xsize[xsize <= length(RT)])]
)
new.data<-merge(all.data,minMax)
new.data$outlier<- new.data$RT < new.data$min | new.data$RT > new.data$max
return(new.data)
}
load("D:/Users/Nick/Dropbox/Research/Projects/2019 Dissertation/data/ch-memory-guided/E1-new.Rda")
df <- E1
df <- tag_outliers(df)
library(dplyr)
library(afex)
df <- tag_outliers(df)
tag_outliers <- function(df){
xsize <- c(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 100)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
#maxRT<- xm+sd(x)*stds[length(xsize[xsize <= length(x)])]
#minRT<- xm-sd(x)*stds[length(xsize[xsize <= length(x)])]
temp.data<- df
temp.data$PrimeProbe <- factor(temp.data$PrimeProbe)
temp.data$PrimeCon <- factor(temp.data$PrimeCon)
temp.data$ProbeCon <- factor(temp.data$ProbeCon)
minMax <- temp.data %>%
filter(
RT < 5000,
RT > 0,
ACC == TRUE
) %>%
group_by(Exp,Subject,PrimeProbe,block,PrimeCon,ProbeCon) %>%
summarize (
Ntrials = n(),
cutoff = stds[length(xsize[xsize <= length(RT)])],
min = mean(RT) - sd(RT)*stds[length(xsize[xsize <= length(RT)])],
max = mean(RT) + sd(RT)*stds[length(xsize[xsize <= length(RT)])]
)
new.data<-merge(df,minMax)
new.data$outlier<- new.data$RT < new.data$min | new.data$RT > new.data$max
return(new.data)
}
df <- tag_outliers(df)
RT.DF<- df %>%
filter(ACC == TRUE, RT < 5000, RT > 0, PrimeProbe == "Probe") %>%
group_by(Subject,Exp,block,PrimeCon,ProbeCon) %>%
summarise(vjoutRT = mean(RT))
ExploreDF <- df %>%
filter(RT < 5000, RT > 0) %>%
group_by(Subject,Exp,PrimeProbe,PrimeCon,ProbeCon) %>%
summarise(meanRT = mean(RT),
meanAccuracy = mean(ACC),
TrialsCompleted = length(RT),
maxRT = max(RT),
vjoutRT = mean(vjoutNR(RT,1)),
removed = vjoutNR(RT,2))
LowACC <- unique(ExploreDF %>%
filter(meanAccuracy <.8) %>%
.$Subject)
vjoutNR <- function(x,n) {
# vjoutNR(data, 1) returns mean with outliers removed #
# vjoutNR(data, 2) returns percentage of trials removed #
xm <- mean(x)
xsize <- c(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 100)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
stdindex <- length(xsize[xsize <= length(x)])
removed <- x[x < xm+sd(x)*stds[stdindex]]
removed <- removed[removed > xm - (sd(x)*stds[stdindex])]
proportionRemoved <- length(removed)/length(x)
finaldata<-c(mean(removed),1-proportionRemoved)
return(finaldata[[n]])
}
print_apa_ci <- function(aov_table){
print_eta_ci <- function(Fval, conf = .90, df1, df2){
limits <- apaTables::get.ci.partial.eta.squared(F.value=Fval, df1=df1, df2=df2, conf.level=conf)
return(paste0(", 90\\% CI $[",round(limits$LL, 2),"$, $",round(limits$UL, 2),"]$"))
}
pap <- apa_print(aov_table, es = "pes", correction = "none")$full_result
for(i in 1:length(pap)){
pap[i] <- paste0(pap[i], print_eta_ci(Fval = aov_table$anova_table$`F`[i], df1 = aov_table$anova_table$`num Df`[i], df2 = aov_table$anova_table$`den Df`[i]))
pap[i] <- gsub("p = .000", "p < .001", pap[i])
pap[i] <- gsub(") = 0.00", ") < 0.01", pap[i])
}
return(pap)
}
## Remove low acc subjects
ExploreDF <- df %>%
filter(RT < 5000, RT > 0) %>%
group_by(Subject,Exp,PrimeProbe,PrimeCon,ProbeCon) %>%
summarise(meanRT = mean(RT),
meanAccuracy = mean(ACC),
TrialsCompleted = length(RT),
maxRT = max(RT),
vjoutRT = mean(vjoutNR(RT,1)),
removed = vjoutNR(RT,2))
LowACC <- unique(ExploreDF %>%
filter(meanAccuracy <.8) %>%
.$Subject)
RT.DF <- RT.DF %>%
filter(Subject%in%LowACC == FALSE)
## Summarize Data
RT.DF <- RT.DF %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(vjoutRT = mean(vjoutRT))
RT.Diff<-RT.DF %>%
group_by(Exp,Subject,PrimeCon,ProbeCon) %>%
summarise(RT = mean(vjoutRT)) %>%
spread(ProbeCon,RT) %>%
mutate(Diff = Inc - Con) %>%
select(-Con:-Inc)%>%
group_by(Exp,PrimeCon) %>%
summarise(
N = n_distinct(Subject),
Flanker = mean(Diff),
sd = sd(Diff),
SE = sd/sqrt(N)
)
library(tidyr)
## Summarize Data
RT.DF <- RT.DF %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(vjoutRT = mean(vjoutRT))
RT.Diff<-RT.DF %>%
group_by(Exp,Subject,PrimeCon,ProbeCon) %>%
summarise(RT = mean(vjoutRT)) %>%
spread(ProbeCon,RT) %>%
mutate(Diff = Inc - Con) %>%
select(-Con:-Inc)%>%
group_by(Exp,PrimeCon) %>%
summarise(
N = n_distinct(Subject),
Flanker = mean(Diff),
sd = sd(Diff),
SE = sd/sqrt(N)
)
aov_car(vjoutRT ~ Exp*ProbeCon*PrimeCon + Error(Subject/ProbeCon*PrimeCon), data = RT.DF)
RT.DF<- df %>%
filter(ACC == TRUE, RT < 5000, RT > 0, PrimeProbe == "Probe", outlier == FALSE) %>%
group_by(Subject,Exp,block,PrimeCon,ProbeCon) %>%
summarise(vjoutRT = mean(RT))
## Remove low acc subjects
ExploreDF <- df %>%
filter(RT < 5000, RT > 0) %>%
group_by(Subject,Exp,PrimeProbe,PrimeCon,ProbeCon) %>%
summarise(meanRT = mean(RT),
meanAccuracy = mean(ACC),
TrialsCompleted = length(RT),
maxRT = max(RT),
vjoutRT = mean(vjoutNR(RT,1)),
removed = vjoutNR(RT,2))
LowACC <- unique(ExploreDF %>%
filter(meanAccuracy <.8) %>%
.$Subject)
if(levels(df$Exp)[1] == "E3A"){
RT.DF<- df %>%
filter(ACC == TRUE, RT < 5000, RT > 0, PrimeProbe == "Probe") %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(vjoutRT = mean(RT))
}
RT.DF <- RT.DF %>%
filter(Subject%in%LowACC == FALSE)
####
## Summarize Data
RT.DF <- RT.DF %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(vjoutRT = mean(vjoutRT))
RT.Diff<-RT.DF %>%
group_by(Exp,Subject,PrimeCon,ProbeCon) %>%
summarise(RT = mean(vjoutRT)) %>%
spread(ProbeCon,RT) %>%
mutate(Diff = Inc - Con) %>%
select(-Con:-Inc)%>%
group_by(Exp,PrimeCon) %>%
summarise(
N = n_distinct(Subject),
Flanker = mean(Diff),
sd = sd(Diff),
SE = sd/sqrt(N)
)
aov_car(vjoutRT ~ Exp*ProbeCon*PrimeCon + Error(Subject/ProbeCon*PrimeCon), data = RT.DF)
ACC.DF <- df %>%
filter(Subject%in%LowACC == FALSE, PrimeProbe == "Probe", outlier == FALSE) %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(mACC = (1-mean(ACC))*100)
aov_car(mACC ~ PrimeCon*ProbeCon*Exp + Error(Subject/PrimeCon*ProbeCon), data = ACC.DF)
ACC.DF <- df %>%
filter(Subject%in%LowACC == FALSE, PrimeProbe == "Probe", outlier == FALSE, RT < 5000, RT > 0) %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(mACC = (1-mean(ACC))*100)
aov_car(mACC ~ PrimeCon*ProbeCon*Exp + Error(Subject/PrimeCon*ProbeCon), data = ACC.DF)
ACC.DF <- df %>%
filter(Subject%in%LowACC == FALSE, PrimeProbe == "Probe", RT < 5000, RT > 0) %>%
group_by(Subject,Exp,PrimeCon,ProbeCon) %>%
summarise(mACC = (1-mean(ACC))*100)
aov_car(mACC ~ PrimeCon*ProbeCon*Exp + Error(Subject/PrimeCon*ProbeCon), data = ACC.DF)
